// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package user

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson56de76c1DecodeGithubComGoParkMailRu20202MVVMGitApplicationUser(in *jlexer.Lexer, out *Update) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		case "surname":
			out.Surname = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "new_password":
			out.NewPassword = string(in.String())
		case "old_password":
			out.OldPassword = string(in.String())
		case "phone":
			out.Phone = string(in.String())
		case "social_network":
			out.SocialNetwork = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
//func easyjson56de76c1EncodeGithubComGoParkMailRu20202MVVMGitApplicationUser(out *jwriter.Writer, in Update) {
//	out.RawByte('{')
//	first := true
//	_ = first
//	{
//		const prefix string = ",\"name\":"
//		out.RawString(prefix[1:])
//		out.String(string(in.Name))
//	}
//	{
//		const prefix string = ",\"surname\":"
//		out.RawString(prefix)
//		out.String(string(in.Surname))
//	}
//	{
//		const prefix string = ",\"email\":"
//		out.RawString(prefix)
//		out.String(string(in.Email))
//	}
//	{
//		const prefix string = ",\"new_password\":"
//		out.RawString(prefix)
//		out.String(string(in.NewPassword))
//	}
//	{
//		const prefix string = ",\"old_password\":"
//		out.RawString(prefix)
//		out.String(string(in.OldPassword))
//	}
//	{
//		const prefix string = ",\"phone\":"
//		out.RawString(prefix)
//		out.String(string(in.Phone))
//	}
//	{
//		const prefix string = ",\"social_network\":"
//		out.RawString(prefix)
//		out.String(string(in.SocialNetwork))
//	}
//	out.RawByte('}')
//}

// MarshalEasyJSON supports easyjson.Marshaler interface
//func (v Update) MarshalEasyJSON(w *jwriter.Writer) {
//	easyjson56de76c1EncodeGithubComGoParkMailRu20202MVVMGitApplicationUser(w, v)
//}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Update) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20202MVVMGitApplicationUser(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20202MVVMGitApplicationUser1(in *jlexer.Lexer, out *Register) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_type":
			out.UserType = string(in.String())
		case "password":
			out.Password = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "surname":
			out.Surname = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "phone":
			out.Phone = string(in.String())
		case "social_network":
			out.SocialNetwork = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
//func easyjson56de76c1EncodeGithubComGoParkMailRu20202MVVMGitApplicationUser1(out *jwriter.Writer, in Register) {
//	out.RawByte('{')
//	first := true
//	_ = first
//	{
//		const prefix string = ",\"user_type\":"
//		out.RawString(prefix[1:])
//		out.String(string(in.UserType))
//	}
//	{
//		const prefix string = ",\"password\":"
//		out.RawString(prefix)
//		out.String(string(in.Password))
//	}
//	{
//		const prefix string = ",\"name\":"
//		out.RawString(prefix)
//		out.String(string(in.Name))
//	}
//	{
//		const prefix string = ",\"surname\":"
//		out.RawString(prefix)
//		out.String(string(in.Surname))
//	}
//	{
//		const prefix string = ",\"email\":"
//		out.RawString(prefix)
//		out.String(string(in.Email))
//	}
//	{
//		const prefix string = ",\"phone\":"
//		out.RawString(prefix)
//		out.String(string(in.Phone))
//	}
//	{
//		const prefix string = ",\"social_network\":"
//		out.RawString(prefix)
//		out.String(string(in.SocialNetwork))
//	}
//	out.RawByte('}')
//}

// MarshalEasyJSON supports easyjson.Marshaler interface
//func (v Register) MarshalEasyJSON(w *jwriter.Writer) {
//	easyjson56de76c1EncodeGithubComGoParkMailRu20202MVVMGitApplicationUser1(w, v)
//}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Register) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20202MVVMGitApplicationUser1(l, v)
}
