// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	models "github.com/go-park-mail-ru/2020_2_MVVM.git/application/models"
	mock "github.com/stretchr/testify/mock"
)

// UseCase is an autogenerated mock type for the UseCase type
type UseCase struct {
	mock.Mock
}

// CreateCustomCompany provides a mock function with given fields: company
func (_m *UseCase) CreateCustomCompany(company models.CustomCompany) (*models.CustomCompany, error) {
	ret := _m.Called(company)

	var r0 *models.CustomCompany
	if rf, ok := ret.Get(0).(func(models.CustomCompany) *models.CustomCompany); ok {
		r0 = rf(company)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.CustomCompany)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.CustomCompany) error); ok {
		r1 = rf(company)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCustomCompany provides a mock function with given fields: id
func (_m *UseCase) GetCustomCompany(id string) (*models.CustomCompany, error) {
	ret := _m.Called(id)

	var r0 *models.CustomCompany
	if rf, ok := ret.Get(0).(func(string) *models.CustomCompany); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.CustomCompany)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
