// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	api "github.com/go-park-mail-ru/2020_2_MVVM.git/application/microservices/auth/api"

	mock "github.com/stretchr/testify/mock"
)

// AuthServer is an autogenerated mock type for the AuthServer type
type AuthServer struct {
	mock.Mock
}

// Check provides a mock function with given fields: _a0, _a1
func (_m *AuthServer) Check(_a0 context.Context, _a1 *api.SessionID) (*api.SessionInfo, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.SessionInfo
	if rf, ok := ret.Get(0).(func(context.Context, *api.SessionID) *api.SessionInfo); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.SessionInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.SessionID) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Login provides a mock function with given fields: _a0, _a1
func (_m *AuthServer) Login(_a0 context.Context, _a1 *api.Credentials) (*api.SessionInfo, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.SessionInfo
	if rf, ok := ret.Get(0).(func(context.Context, *api.Credentials) *api.SessionInfo); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.SessionInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.Credentials) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Logout provides a mock function with given fields: _a0, _a1
func (_m *AuthServer) Logout(_a0 context.Context, _a1 *api.SessionID) (*api.Empty, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.Empty
	if rf, ok := ret.Get(0).(func(context.Context, *api.SessionID) *api.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Empty)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.SessionID) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedAuthServer provides a mock function with given fields:
func (_m *AuthServer) mustEmbedUnimplementedAuthServer() {
	_m.Called()
}
