// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	common "github.com/go-park-mail-ru/2020_2_MVVM.git/application/common"
	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Add provides a mock function with given fields: sessionID, _a1
func (_m *Repository) Add(sessionID string, _a1 common.BasicSession) error {
	ret := _m.Called(sessionID, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, common.BasicSession) error); ok {
		r0 = rf(sessionID, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: sessionID
func (_m *Repository) Delete(sessionID string) error {
	ret := _m.Called(sessionID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(sessionID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetSession provides a mock function with given fields: sessionID
func (_m *Repository) GetSession(sessionID string) (*common.BasicSession, error) {
	ret := _m.Called(sessionID)

	var r0 *common.BasicSession
	if rf, ok := ret.Get(0).(func(string) *common.BasicSession); ok {
		r0 = rf(sessionID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*common.BasicSession)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(sessionID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
